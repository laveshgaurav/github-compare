{"version":3,"sources":["components/ProfileCard.js","components/InputName.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["ProfileCard","props","className","src","image","alt","style","fontWeight","color","fontSize","username","id","followers","following","publicRepo","publicGists","Date","created","toDateString","href","profile","target","InputName","myChangeHandler","event","setState","value","replace","handleSubmit","evt","a","preventDefault","axios","get","state","result","console","log","data","prevState","profiles","loading","wrongEntry","message","sortById","bind","sortByFollowers","sortByFollowing","sortedProfile","this","sort","b","Fragment","onSubmit","placeholder","type","onChange","onClick","display","alignItems","justifyContent","class","role","margin","data-dismiss","aria-label","aria-hidden","map","users","login","avatar_url","html_url","created_at","public_repos","public_gists","Component","Home","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.30251e65.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ProfileCard.css\";\r\nfunction ProfileCard(props) {\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"ProfileCard__container\">\r\n        <div className=\"ProfileCard__image\">\r\n          <img src={props.image} alt=\"name\" />\r\n        </div>\r\n        <div className=\"ProfileCard__data\">\r\n          <p style={{ fontWeight: \"bold\", color: \"orange\", fontSize: \"32px\" }}>\r\n            {props.username}\r\n          </p>\r\n          <p className=\"ids\">{props.id}</p>\r\n          <p>Followers : {props.followers}</p>\r\n          <p>Following : {props.following}</p>\r\n          <p>Public Repos : {props.publicRepo}</p>\r\n          <p>Public Gists : {props.publicGists}</p>\r\n          <p>Created At : {new Date(props.created).toDateString()}</p>\r\n          <a href={props.profile} className=\"link\" target=\"_blank\">\r\n            View Profile\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProfileCard from \"./ProfileCard\";\r\nimport \"./InputName.css\";\r\nexport class InputName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profiles: [],\r\n      username: \"\",\r\n      loading: true,\r\n      wrongEntry: false,\r\n      value: \"login\",\r\n    };\r\n\r\n    this.sortById = this.sortById.bind(this);\r\n    this.sortByFollowers = this.sortByFollowers.bind(this);\r\n    this.sortByFollowing = this.sortByFollowing.bind(this);\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({ username: event.target.value.replace(/\\s+/g, \"\") });\r\n  };\r\n  handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    try {\r\n      const result = await axios.get(\r\n        `https://api.github.com/users/${this.state.username}`\r\n      );\r\n      console.log(result.data);\r\n      this.setState((prevState) => ({\r\n        profiles: [...prevState.profiles, result.data],\r\n      }));\r\n      this.setState({ loading: false });\r\n      console.log(this.state.profiles);\r\n      this.setState({ wrongEntry: false });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      this.setState({ wrongEntry: true });\r\n    }\r\n    this.setState({\r\n      username: \"\",\r\n    });\r\n  };\r\n  sortById() {\r\n    var sortedProfile = this.state.profiles.sort((a, b) => a.id - b.id);\r\n    this.setState({ profiles: [...sortedProfile] });\r\n    console.log(this.state.profiles);\r\n  }\r\n  sortByFollowers() {\r\n    var sortedProfile = this.state.profiles.sort(\r\n      (a, b) => a.followers - b.followers\r\n    );\r\n    this.setState({ profiles: [...sortedProfile] });\r\n    console.log(this.state.profiles);\r\n  }\r\n  sortByFollowing() {\r\n    var sortedProfile = this.state.profiles.sort(\r\n      (a, b) => a.following - b.following\r\n    );\r\n    this.setState({ profiles: [...sortedProfile] });\r\n    console.log(this.state.profiles);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <div className=\"inputName__search-container\">\r\n            <form className=\"box\" onSubmit={this.handleSubmit}>\r\n              <input\r\n                value={this.state.username}\r\n                placeholder=\"Search Profile\"\r\n                type=\"text\"\r\n                onChange={this.myChangeHandler}\r\n              />\r\n              <div onClick={this.handleSubmit} className=\"inputName__search\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {this.state.wrongEntry ? (\r\n          <div\r\n            className=\"row text-center m-auto\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              style={{ margin: \"0.4rem\" }}\r\n            >\r\n              <p>Profile doesn't exist, search again!</p>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.loading ? (\r\n          <div className=\"container\">\r\n            <h4 style={{ color: \"#ededed\" }}>Search For Profile</h4>\r\n          </div>\r\n        ) : (\r\n          <div className=\"container\">\r\n            <button className=\"submitBtn\" onClick={this.sortById}>\r\n              Sort By Id\r\n            </button>\r\n            <button className=\"submitBtn\" onClick={this.sortByFollowers}>\r\n              Sort By Followers\r\n            </button>\r\n            <button className=\"submitBtn\" onClick={this.sortByFollowing}>\r\n              Sort By Following\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"profileBox\">\r\n          {this.state.profiles.sort().map((users) => (\r\n            <ProfileCard\r\n              username={users.login}\r\n              id={users.id}\r\n              image={users.avatar_url}\r\n              profile={users.html_url}\r\n              followers={users.followers}\r\n              following={users.following}\r\n              created={users.created_at}\r\n              publicRepo={users.public_repos}\r\n              publicGists={users.public_gists}\r\n            />\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputName;\r\n","import React from \"react\";\r\nimport InputName from \"../components/InputName\";\r\nimport ProfileCard from \"../components/ProfileCard\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <InputName />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}